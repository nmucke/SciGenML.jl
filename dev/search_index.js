var documenterSearchIndex = {"docs":
[{"location":"#SciGenML","page":"Home","title":"SciGenML","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for SciGenML.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#SciGenML.Models.ConditionalGenerativeModel","page":"Home","title":"SciGenML.Models.ConditionalGenerativeModel","text":"Abstract type for all conditional generative models.\n\n\n\n\n\n","category":"type"},{"location":"#SciGenML.Models.GenerativeModel","page":"Home","title":"SciGenML.Models.GenerativeModel","text":"Abstract type for all generative models.\n\n\n\n\n\n","category":"type"},{"location":"#SciGenML.Models.InterpolantCoefs","page":"Home","title":"SciGenML.Models.InterpolantCoefs","text":"InterpolantCoefs\n\nA struct that contains the alpha and beta function coefficients and their derivatives.\n\nThe interpolant is defined as:\nx(t) = α(t) * x0 + β(t) * x1\n\nThe derivatives are:\ndx/dt = α'(t) * x0 + β'(t) * x1\n\n\n\n\n\n","category":"type"},{"location":"#SciGenML.Models.StochasticInterpolantGenerativeModel","page":"Home","title":"SciGenML.Models.StochasticInterpolantGenerativeModel","text":"StochasticInterpolantGenerativeModel\n\nA generative model that uses a stochastic interpolant to generate data.\n\n\n\n\n\n","category":"type"},{"location":"#SciGenML.Models.compute_interpolant-Tuple{Any, Any, SciGenML.Models.InterpolantCoefs, Any}","page":"Home","title":"SciGenML.Models.compute_interpolant","text":"compute_interpolant\n\nComputes the interpolant at a given time.\n\nArgs:\n    x0: The starting point.\n    x1: The ending point.\n    interpolant: The interpolant.\n    t: The time.\n\n\n\n\n\n","category":"method"},{"location":"#SciGenML.Models.compute_interpolant_diff-Tuple{Any, Any, SciGenML.Models.InterpolantCoefs, Any}","page":"Home","title":"SciGenML.Models.compute_interpolant_diff","text":"compute_interpolant_diff\n\nComputes the derivative of the interpolant at a given time.\n\nArgs:\n    x0: The starting point.\n    x1: The ending point.\n    interpolant: The interpolant.\n    t: The time.\n\n\n\n\n\n","category":"method"},{"location":"#SciGenML.Models.get_interpolant_coefs-Tuple{String}","page":"Home","title":"SciGenML.Models.get_interpolant_coefs","text":"get_interpolant_coefs(type::String)\n\nGet the interpolant coefficients for a given type. \nSupported types are:\n- \"linear\"\n- \"quadratic\"\n\n\n\n\n\n","category":"method"},{"location":"#SciGenML.Models.linear_interpolant_coefs-Tuple{}","page":"Home","title":"SciGenML.Models.linear_interpolant_coefs","text":"linear_interpolant_coefs\n\nReturns the linear interpolant.\n\nThe linear interpolant is defined as:\nα(t) = 1 - t\nβ(t) = t\n\nThe derivatives are:\nα'(t) = -1\nβ'(t) = 1\n\n\n\n\n\n","category":"method"},{"location":"#SciGenML.Models.quadratic_interpolant_coefs-Tuple{}","page":"Home","title":"SciGenML.Models.quadratic_interpolant_coefs","text":"quadratic_interpolant_coefs\n\nReturns the quadratic interpolant.\n\nThe quadratic interpolant is defined as:\nα(t) = 1 - t\nβ(t) = t^2\n\nThe derivatives are:\nα'(t) = -1\nβ'(t) = 2t\n\n\n\n\n\n","category":"method"},{"location":"#SciGenML.Architectures.DenseNeuralNetwork-Tuple{Tuple, Int64, Vector{Int64}}","page":"Home","title":"SciGenML.Architectures.DenseNeuralNetwork","text":"DenseNN(\n    in_features::Tuple,\n    out_features::Int, \n    hidden_features::Vector{Int};\n    activation_function::Function = DEFAULT_ACTIVATION_FUNCTION,\n    dropout::Float32 = DEFAULT_DROPOUT\n)\n\nin_features: A tuple of the number of input features\nout_features: The number of output features.\nhidden_features: The number of hidden features.\nactivation_function: The activation function.\n\nA dense neural network with `in_features` input features, \n`out_features` output features, and `hidden_features` hidden features.\nThe input is a tuple that are concatenated to form a single input.\n\n\n\n\n\n","category":"method"},{"location":"#SciGenML.Architectures.get_model-Tuple{}","page":"Home","title":"SciGenML.Architectures.get_model","text":"get_model(\n    in_features,\n    out_features,\n    hidden_features,\n    activation_function = DEFAULT_ACTIVATION_FUNCTION,\n    dropout = DEFAULT_DROPOUT\n)\n\nin_features: The number of input features.\nout_features: The number of output features.\nhidden_features: The number of hidden features.\nactivation_function: The activation function.\ndropout: The dropout rate.\n\nReturns a model that can be used to predict the output from the input.\n\n\n\n\n\n","category":"method"},{"location":"#SciGenML.Sampling.sample-Tuple{SciGenML.Models.StochasticInterpolantGenerativeModel, Int64, Int64}","page":"Home","title":"SciGenML.Sampling.sample","text":"sample(\n    model::Models.StochasticInterpolantGenerativeModel,\n    num_samples::Int,\n    num_steps::Int,\n    rng::Random.AbstractRNG = Random.default_rng()\n)\n\nSample from a stochastic interpolant generative model using the forward Euler method.\n\n\n\n\n\n","category":"method"},{"location":"#SciGenML.Training.compute_loss-NTuple{4, Any}","page":"Home","title":"SciGenML.Training.compute_loss","text":"compute_loss(model, ps, st, (x, y))\n\nCompute the loss for a stochastic interpolant generative model.\n\n\n\n\n\n","category":"method"},{"location":"#SciGenML.Training.get_optimizer-Tuple{String, Any, Any}","page":"Home","title":"SciGenML.Training.get_optimizer","text":"get_optimizer(type::String, lr::Float32, lambda::Float32)\n\nGet an optimizer from a string.\n\n\n\n\n\n","category":"method"},{"location":"#SciGenML.Training.prepare_batches-Tuple{Any, Int64, Random.AbstractRNG}","page":"Home","title":"SciGenML.Training.prepare_batches","text":"prepare_batches(data::Dict{String, AbstractArray}, batch_size::Int)\n\nPrepare batches for training.\n\n\n\n\n\n","category":"method"},{"location":"#SciGenML.Training.stochastic_interpolant_train_step-Tuple{SciGenML.Models.StochasticInterpolantGenerativeModel, AbstractArray, AbstractArray, Lux.Training.TrainState, Random.AbstractRNG}","page":"Home","title":"SciGenML.Training.stochastic_interpolant_train_step","text":"stochastic_interpolant_train_step(\n    model::Models.StochasticInterpolantGenerativeModel,\n    base_samples::AbstractArray,\n    target_samples::AbstractArray,\n    train_state::Lux.Training.TrainState,\n    rng::Random.AbstractRNG\n)\n\nTrain a stochastic interpolant generative model for one step.\n\n\n\n\n\n","category":"method"},{"location":"#SciGenML.Training.train","page":"Home","title":"SciGenML.Training.train","text":"train(\n    model::Models.StochasticInterpolantGenerativeModel,\n    data,\n    config,\n    rng = Random.default_rng();\n    verbose = true\n)\n\nTrain a stochastic interpolant generative model.\n\n\n\n\n\n","category":"function"},{"location":"#SciGenML.Config.DenseNeuralNetworkHyperparameters","page":"Home","title":"SciGenML.Config.DenseNeuralNetworkHyperparameters","text":"DenseNeuralNetworkHyperparameters\n\nHyperparameters for the dense neural network.\n\n\n\n\n\n","category":"type"},{"location":"#SciGenML.Config.Hyperparameters","page":"Home","title":"SciGenML.Config.Hyperparameters","text":"Hyperparameters\n\nHyperparameters for the architecture, training, and optimizer.\n\n\n\n\n\n","category":"type"},{"location":"#SciGenML.Config.OptimizerHyperparameters","page":"Home","title":"SciGenML.Config.OptimizerHyperparameters","text":"OptimizerHyperparameters\n\nHyperparameters for the optimizer.\n\n\n\n\n\n","category":"type"},{"location":"#SciGenML.Config.PlaceholderGenerativeModel","page":"Home","title":"SciGenML.Config.PlaceholderGenerativeModel","text":"PlaceholderGenerativeModel\n\nA generative model that uses a placeholder.\n\n\n\n\n\n","category":"type"},{"location":"#SciGenML.Config.PlaceholderHyperparameters","page":"Home","title":"SciGenML.Config.PlaceholderHyperparameters","text":"PlaceholderHyperparameters\n\nHyperparameters for the placeholder.\n\n\n\n\n\n","category":"type"},{"location":"#SciGenML.Config.StochasticInterpolantGenerativeModelHyperparameters","page":"Home","title":"SciGenML.Config.StochasticInterpolantGenerativeModelHyperparameters","text":"StochasticInterpolantGenerativeModelHyperparameters\n\nHyperparameters for the stochastic interpolant generative model.\n\n\n\n\n\n","category":"type"},{"location":"#SciGenML.Config.TrainingHyperparameters","page":"Home","title":"SciGenML.Config.TrainingHyperparameters","text":"TrainingHyperparameters\n\nHyperparameters for the training.\n\n\n\n\n\n","category":"type"}]
}
